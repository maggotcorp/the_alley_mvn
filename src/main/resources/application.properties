server.servlet.contextPath=/the_alley

server.port = 1234
# logging.level.org.apache.http=DEBUG
logging.level.org.springframework=INFO
# logging.level.com.sta=DEBUG
logging.hibernate=INFO
# output to a temp_folder/file
# logging.file=F:\work_spaces\temp
# spring.jackson.default-property-inclusion = non_null
#### Tell Spring Security (if used) to require requests over HTTPS ####
# security.require-ssl=false
# The alias mapped to the certificate
# server.ssl.key-alias=sta
# The format used for the keystore
# server.ssl.key-store-type=JKS
# The path to the keystore containing the certificate
# server.ssl.key-store=keystore.jks
# The password used to generate the certificate
# server.ssl.key-store-password=welcome1
# The password used for DEV
# server.ssl.key-store-password=welcome1
# server.ssl.key-store-provider=SUN

# Thymeleaf
spring.thymeleaf.cache = false
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8

# H2 DB set up
#spring.datasource.url=jdbc:h2:mem:testdatabase
#spring.datasource.username=sa
#spring.datasource.password=password
#spring.datasource.driverClassName=org.h2.Driver

# jpa
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true

##H2 dialect sets
#spring.jpa.properties.hibernate.dialect = org.hibernate.CacheMode
#spring.jpa.database-platform=org.hibernate.dialect

# maria DB set up
#spring.datasource.url=jdbc:mariadb://localhost:2525
#spring.datasource.username=root
#spring.datasource.password=password
#spring.datasource.driverClassName=org.mariadb.jdbc.Driver

#mongo set up
spring.data.mongodb.host=localhost  #Mongo server host.
spring.data.mongodb.port=1919  #Mongo server port.
spring.data.mongodb.repositories.enabled=true  #Enable Mongo repositories.
spring.data.mongodb.uri=mongodb://localhost:1919/the_alley  #Mongo database URI. When set, host and port are ignored.
spring.data.mongod.username=root
spring.data.mongodb.password=password

ffgfdgfgdvxz
# Naming strategy
# spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
# spring.jpa.properties.hibernate.id.new_generator_mappings=true
# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)
# The SQL dialect makes Hibernate generate better SQL for the chosen database
# spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MariaDB103Dialect
# Hibernate ddl auto (create, create-drop, update, validate)  spring.jpa.hibernate.ddl-auto=create-drop or validate
# spring.jpa.hibernate.ddl-auto=create-drop
# spring.jpa.show-sql=true
# Naming strategy
# spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
# spring.jpa.properties.hibernate.id.new_generator_mappings=true
# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)
# The SQL dialect makes Hibernate generate better SQL for the chosen database
# spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MariaDB103Dialect

#mongo db set up
#spring.data.mongodb.authentication-database= # Authentication database name.
#spring.data.mongodb.database=the_alley # Database name.
#spring.data.mongodb.field-naming-strategy= # Fully qualified name of the FieldNamingStrategy to use.
#spring.data.mongodb.grid-fs-database= # GridFS database name.
#spring.data.mongodb.password= sysadmin  # Login password of the mongo server.
#spring.data.mongodb.username= welcome1 # Login user of the mongo server.

#security
#security.user.name=maestro
#security.user.password=welcome1
##security.user.role=ADMIN
#security.require-ssl=false
##security.enable-csrf=false
#security.basic.enabled=true
#security.basic.realm=Spring
#security.basic.path= # /**
#security.headers.xss=falselo
#security.headers.cache=false
#security.headers.frame=false
#security.headers.contentType=false
# none / domain / all
#security.headers.hsts=all
# always / never / if_required / stateless
#security.sessions=stateless
#security.ignored=false